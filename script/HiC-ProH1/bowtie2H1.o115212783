Settings:
  Output files: "/g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC/assemblyQ720KOntHifiHiCBiggerThan50KContig/hap1/bowtie2_index/assemblyQ720KOntHifiHiCBigger50Kcontig.hic.hap1_ctg.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  /g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC/assemblyQ720KOntHifiHiCBiggerThan50KContig/hap1/assemblyQ720KOntHifiHiCBigger50Kcontig.hic.hap1_ctg.fasta
Reading reference sizes
  Time reading reference sizes: 00:00:06
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:05
bmax according to bmaxDivN setting: 420778097
Using parameters --bmax 315583573 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 315583573 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:37
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:13
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:13
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 2.10389e+08 (target: 315583572)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (315583573) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 278202931 for bucket 1
  (Using difference cover)
  Sorting block time: 00:02:13
Returning block of 278202932 for bucket 1
Getting block 2 of 8
  Reserving size (315583573) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 296741058 for bucket 2
  (Using difference cover)
  Sorting block time: 00:02:23
Returning block of 296741059 for bucket 2
Getting block 3 of 8
  Reserving size (315583573) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 284941531 for bucket 3
  (Using difference cover)
  Sorting block time: 00:02:18
Returning block of 284941532 for bucket 3
Getting block 4 of 8
  Reserving size (315583573) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 66978729 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 66978730 for bucket 4
Getting block 5 of 8
  Reserving size (315583573) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 269509354 for bucket 5
  (Using difference cover)
  Sorting block time: 00:02:10
Returning block of 269509355 for bucket 5
Getting block 6 of 8
  Reserving size (315583573) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 122160174 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:58
Returning block of 122160175 for bucket 6
Getting block 7 of 8
  Reserving size (315583573) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 278684228 for bucket 7
  (Using difference cover)
  Sorting block time: 00:02:15
Returning block of 278684229 for bucket 7
Getting block 8 of 8
  Reserving size (315583573) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 85894377 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:40
Returning block of 85894378 for bucket 8
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 538577671
fchr[G]: 841819821
fchr[T]: 1144740139
fchr[$]: 1683112389
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 565240745 bytes to primary EBWT file: /g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC/assemblyQ720KOntHifiHiCBiggerThan50KContig/hap1/bowtie2_index/assemblyQ720KOntHifiHiCBigger50Kcontig.hic.hap1_ctg.1.bt2.tmp
Wrote 420778104 bytes to secondary EBWT file: /g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC/assemblyQ720KOntHifiHiCBiggerThan50KContig/hap1/bowtie2_index/assemblyQ720KOntHifiHiCBigger50Kcontig.hic.hap1_ctg.2.bt2.tmp
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1683112389
    bwtLen: 1683112390
    sz: 420778098
    bwtSz: 420778098
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 105194525
    offsSz: 420778100
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 8766211
    numLines: 8766211
    ebwtTotLen: 561037504
    ebwtTotSz: 561037504
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:20:14
Reading reference sizes
  Time reading reference sizes: 00:00:06
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:04
  Time to reverse reference sequence: 00:00:01
bmax according to bmaxDivN setting: 420778097
Using parameters --bmax 315583573 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 315583573 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:37
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:13
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:13
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 2.40445e+08 (target: 315583572)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (315583573) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 298064417 for bucket 1
  (Using difference cover)
  Sorting block time: 00:02:22
Returning block of 298064418 for bucket 1
Getting block 2 of 7
  Reserving size (315583573) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 224926804 for bucket 2
  (Using difference cover)
  Sorting block time: 00:01:47
Returning block of 224926805 for bucket 2
Getting block 3 of 7
  Reserving size (315583573) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 189256237 for bucket 3
  (Using difference cover)
  Sorting block time: 00:01:31
Returning block of 189256238 for bucket 3
Getting block 4 of 7
  Reserving size (315583573) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 308243381 for bucket 4
  (Using difference cover)
  Sorting block time: 00:02:31
Returning block of 308243382 for bucket 4
Getting block 5 of 7
  Reserving size (315583573) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 193535886 for bucket 5
  (Using difference cover)
  Sorting block time: 00:01:32
Returning block of 193535887 for bucket 5
Getting block 6 of 7
  Reserving size (315583573) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 270070221 for bucket 6
  (Using difference cover)
  Sorting block time: 00:02:11
Returning block of 270070222 for bucket 6
Getting block 7 of 7
  Reserving size (315583573) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 199015437 for bucket 7
  (Using difference cover)
  Sorting block time: 00:01:35
Returning block of 199015438 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 538577671
fchr[G]: 841819821
fchr[T]: 1144740139
fchr[$]: 1683112389
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 565240745 bytes to primary EBWT file: /g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC/assemblyQ720KOntHifiHiCBiggerThan50KContig/hap1/bowtie2_index/assemblyQ720KOntHifiHiCBigger50Kcontig.hic.hap1_ctg.rev.1.bt2.tmp
Wrote 420778104 bytes to secondary EBWT file: /g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC/assemblyQ720KOntHifiHiCBiggerThan50KContig/hap1/bowtie2_index/assemblyQ720KOntHifiHiCBigger50Kcontig.hic.hap1_ctg.rev.2.bt2.tmp
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1683112389
    bwtLen: 1683112390
    sz: 420778098
    bwtSz: 420778098
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 105194525
    offsSz: 420778100
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 8766211
    numLines: 8766211
    ebwtTotLen: 561037504
    ebwtTotSz: 561037504
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:19:24

======================================================================================
                  Resource Usage on 2024-05-08 11:50:36:
   Job Id:             115212783.gadi-pbs
   Project:            xf3
   Exit Status:        0
   Service Units:      21.21
   NCPUs Requested:    16                     NCPUs Used: 16              
                                           CPU Time Used: 00:39:39        
   Memory Requested:   64.0GB                Memory Used: 6.94GB          
   Walltime requested: 24:00:00            Walltime Used: 00:39:46        
   JobFS requested:    400.0GB                JobFS used: 0B              
======================================================================================
