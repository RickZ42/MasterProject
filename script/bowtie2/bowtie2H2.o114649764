Settings:
  Output files: "/g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC/assemblyQ720KOntHifiHiCBiggerThan50KContig/hap2/bowtie2_index/assemblyQ720KOntHifiHiCBigger50Kcontig.hic.hap2_ctg.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  /g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC/assemblyQ720KOntHifiHiCBiggerThan50KContig/hap2/assemblyQ720KOntHifiHiCBigger50Kcontig.hic.hap2_ctg.fasta
Reading reference sizes
  Time reading reference sizes: 00:00:17
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:08
bmax according to bmaxDivN setting: 518869024
Using parameters --bmax 389151768 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 389151768 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:01:09
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:17
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:22
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 3.45913e+08 (target: 389151767)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 6
  Reserving size (389151768) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 369530607 for bucket 1
  (Using difference cover)
  Sorting block time: 00:05:48
Returning block of 369530608 for bucket 1
Getting block 2 of 6
  Reserving size (389151768) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 340320811 for bucket 2
  (Using difference cover)
  Sorting block time: 00:05:26
Returning block of 340320812 for bucket 2
Getting block 3 of 6
  Reserving size (389151768) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 327021891 for bucket 3
  (Using difference cover)
  Sorting block time: 00:05:18
Returning block of 327021892 for bucket 3
Getting block 4 of 6
  Reserving size (389151768) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 344551234 for bucket 4
  (Using difference cover)
  Sorting block time: 00:05:30
Returning block of 344551235 for bucket 4
Getting block 5 of 6
  Reserving size (389151768) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 333197471 for bucket 5
  (Using difference cover)
  Sorting block time: 00:05:19
Returning block of 333197472 for bucket 5
Getting block 6 of 6
  Reserving size (389151768) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 360854080 for bucket 6
  (Using difference cover)
  Sorting block time: 00:05:47
Returning block of 360854081 for bucket 6
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 666233426
fchr[G]: 1036873312
fchr[T]: 1407724358
fchr[$]: 2075476099
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 696026297 bytes to primary EBWT file: /g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC/assemblyQ720KOntHifiHiCBiggerThan50KContig/hap2/bowtie2_index/assemblyQ720KOntHifiHiCBigger50Kcontig.hic.hap2_ctg.1.bt2.tmp
Wrote 518869032 bytes to secondary EBWT file: /g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC/assemblyQ720KOntHifiHiCBiggerThan50KContig/hap2/bowtie2_index/assemblyQ720KOntHifiHiCBigger50Kcontig.hic.hap2_ctg.2.bt2.tmp
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2075476099
    bwtLen: 2075476100
    sz: 518869025
    bwtSz: 518869025
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 129717257
    offsSz: 518869028
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 10809772
    numLines: 10809772
    ebwtTotLen: 691825408
    ebwtTotSz: 691825408
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:44:25
Reading reference sizes
  Time reading reference sizes: 00:00:12
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:08
  Time to reverse reference sequence: 00:00:02
bmax according to bmaxDivN setting: 518869024
Using parameters --bmax 389151768 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 389151768 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:01:09
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:16
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:21
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 6; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 2; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 2.59435e+08 (target: 389151767)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (389151768) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 299751114 for bucket 1
  (Using difference cover)
  Sorting block time: 00:04:42
Returning block of 299751115 for bucket 1
Getting block 2 of 8
  Reserving size (389151768) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 166531521 for bucket 2
  (Using difference cover)
  Sorting block time: 00:02:35
Returning block of 166531522 for bucket 2
Getting block 3 of 8
  Reserving size (389151768) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 376093096 for bucket 3
  (Using difference cover)
  Sorting block time: 00:05:57
Returning block of 376093097 for bucket 3
Getting block 4 of 8
  Reserving size (389151768) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 194497577 for bucket 4
  (Using difference cover)
  Sorting block time: 00:03:06
Returning block of 194497578 for bucket 4
Getting block 5 of 8
  Reserving size (389151768) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 379552271 for bucket 5
  (Using difference cover)
  Sorting block time: 00:06:11
Returning block of 379552272 for bucket 5
Getting block 6 of 8
  Reserving size (389151768) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 252973836 for bucket 6
  (Using difference cover)
  Sorting block time: 00:03:57
Returning block of 252973837 for bucket 6
Getting block 7 of 8
  Reserving size (389151768) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 294087976 for bucket 7
  (Using difference cover)
  Sorting block time: 00:04:39
Returning block of 294087977 for bucket 7
Getting block 8 of 8
  Reserving size (389151768) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 111988701 for bucket 8
  (Using difference cover)
  Sorting block time: 00:01:49
Returning block of 111988702 for bucket 8
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 666233426
fchr[G]: 1036873312
fchr[T]: 1407724358
fchr[$]: 2075476099
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 696026297 bytes to primary EBWT file: /g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC/assemblyQ720KOntHifiHiCBiggerThan50KContig/hap2/bowtie2_index/assemblyQ720KOntHifiHiCBigger50Kcontig.hic.hap2_ctg.rev.1.bt2.tmp
Wrote 518869032 bytes to secondary EBWT file: /g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC/assemblyQ720KOntHifiHiCBiggerThan50KContig/hap2/bowtie2_index/assemblyQ720KOntHifiHiCBigger50Kcontig.hic.hap2_ctg.rev.2.bt2.tmp
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2075476099
    bwtLen: 2075476100
    sz: 518869025
    bwtSz: 518869025
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 129717257
    offsSz: 518869028
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 10809772
    numLines: 10809772
    ebwtTotLen: 691825408
    ebwtTotSz: 691825408
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:46:03

======================================================================================
                  Resource Usage on 2024-04-27 22:27:29:
   Job Id:             114649764.gadi-pbs
   Project:            xf3
   Exit Status:        0
   Service Units:      48.29
   NCPUs Requested:    16                     NCPUs Used: 16              
                                           CPU Time Used: 01:30:27        
   Memory Requested:   64.0GB                Memory Used: 8.53GB          
   Walltime requested: 24:00:00            Walltime Used: 01:30:33        
   JobFS requested:    400.0GB                JobFS used: 0B              
======================================================================================
