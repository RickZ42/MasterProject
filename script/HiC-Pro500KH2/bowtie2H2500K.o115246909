Settings:
  Output files: "/g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC500K/bowtie2_index/assemblyQ720KOntHifiHiCBigger500Kcontig.hic.hap2_ctg.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  /g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC500K/assemblyQ720KOntHifiHiC500K.hic.hap2.fasta
Reading reference sizes
  Time reading reference sizes: 00:00:08
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:06
bmax according to bmaxDivN setting: 514594454
Using parameters --bmax 385945841 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 385945841 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:47
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:16
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:17
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 6; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 2.94054e+08 (target: 385945840)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (385945841) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 204065902 for bucket 1
  (Using difference cover)
  Sorting block time: 00:01:42
Returning block of 204065903 for bucket 1
Getting block 2 of 7
  Reserving size (385945841) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 246764339 for bucket 2
  (Using difference cover)
  Sorting block time: 00:02:03
Returning block of 246764340 for bucket 2
Getting block 3 of 7
  Reserving size (385945841) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 253621380 for bucket 3
  (Using difference cover)
  Sorting block time: 00:02:08
Returning block of 253621381 for bucket 3
Getting block 4 of 7
  Reserving size (385945841) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 347360610 for bucket 4
  (Using difference cover)
  Sorting block time: 00:02:53
Returning block of 347360611 for bucket 4
Getting block 5 of 7
  Reserving size (385945841) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 329248195 for bucket 5
  (Using difference cover)
  Sorting block time: 00:02:46
Returning block of 329248196 for bucket 5
Getting block 6 of 7
  Reserving size (385945841) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 341879162 for bucket 6
  (Using difference cover)
  Sorting block time: 00:02:53
Returning block of 341879163 for bucket 6
Getting block 7 of 7
  Reserving size (385945841) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 335438225 for bucket 7
  (Using difference cover)
  Sorting block time: 00:02:50
Returning block of 335438226 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 661123191
fchr[G]: 1028352325
fchr[T]: 1395755814
fchr[$]: 2058377819
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 690323621 bytes to primary EBWT file: /g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC500K/bowtie2_index/assemblyQ720KOntHifiHiCBigger500Kcontig.hic.hap2_ctg.1.bt2.tmp
Wrote 514594460 bytes to secondary EBWT file: /g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC500K/bowtie2_index/assemblyQ720KOntHifiHiCBigger500Kcontig.hic.hap2_ctg.2.bt2.tmp
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2058377819
    bwtLen: 2058377820
    sz: 514594455
    bwtSz: 514594455
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 128648614
    offsSz: 514594456
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 10720718
    numLines: 10720718
    ebwtTotLen: 686125952
    ebwtTotSz: 686125952
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:24:31
Reading reference sizes
  Time reading reference sizes: 00:00:08
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:05
  Time to reverse reference sequence: 00:00:01
bmax according to bmaxDivN setting: 514594454
Using parameters --bmax 385945841 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 385945841 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:47
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:16
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:17
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 2.57297e+08 (target: 385945840)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (385945841) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 299297483 for bucket 1
  (Using difference cover)
  Sorting block time: 00:02:30
Returning block of 299297484 for bucket 1
Getting block 2 of 8
  Reserving size (385945841) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 264189957 for bucket 2
  (Using difference cover)
  Sorting block time: 00:02:13
Returning block of 264189958 for bucket 2
Getting block 3 of 8
  Reserving size (385945841) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 195608609 for bucket 3
  (Using difference cover)
  Sorting block time: 00:01:37
Returning block of 195608610 for bucket 3
Getting block 4 of 8
  Reserving size (385945841) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 335757454 for bucket 4
  (Using difference cover)
  Sorting block time: 00:02:49
Returning block of 335757455 for bucket 4
Getting block 5 of 8
  Reserving size (385945841) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 362832872 for bucket 5
  (Using difference cover)
  Sorting block time: 00:03:03
Returning block of 362832873 for bucket 5
Getting block 6 of 8
  Reserving size (385945841) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 205672504 for bucket 6
  (Using difference cover)
  Sorting block time: 00:01:44
Returning block of 205672505 for bucket 6
Getting block 7 of 8
  Reserving size (385945841) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 191435649 for bucket 7
  (Using difference cover)
  Sorting block time: 00:01:35
Returning block of 191435650 for bucket 7
Getting block 8 of 8
  Reserving size (385945841) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 203583284 for bucket 8
  (Using difference cover)
  Sorting block time: 00:01:43
Returning block of 203583285 for bucket 8
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 661123191
fchr[G]: 1028352325
fchr[T]: 1395755814
fchr[$]: 2058377819
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 690323621 bytes to primary EBWT file: /g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC500K/bowtie2_index/assemblyQ720KOntHifiHiCBigger500Kcontig.hic.hap2_ctg.rev.1.bt2.tmp
Wrote 514594460 bytes to secondary EBWT file: /g/data/xf3/zz3507/Output/assemblyQ720KOntHifiHiC500K/bowtie2_index/assemblyQ720KOntHifiHiCBigger500Kcontig.hic.hap2_ctg.rev.2.bt2.tmp
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 2058377819
    bwtLen: 2058377820
    sz: 514594455
    bwtSz: 514594455
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 128648614
    offsSz: 514594456
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 10720718
    numLines: 10720718
    ebwtTotLen: 686125952
    ebwtTotSz: 686125952
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:24:51

======================================================================================
                  Resource Usage on 2024-05-08 21:51:57:
   Job Id:             115246909.gadi-pbs
   Project:            xf3
   Exit Status:        0
   Service Units:      6.63
   NCPUs Requested:    4                      NCPUs Used: 4               
                                           CPU Time Used: 00:49:23        
   Memory Requested:   16.0GB                Memory Used: 8.41GB          
   Walltime requested: 24:00:00            Walltime Used: 00:49:45        
   JobFS requested:    400.0GB                JobFS used: 0B              
======================================================================================
